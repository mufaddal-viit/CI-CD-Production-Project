name: Node.js CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  # -------------------------------
  # 1. Run Tests with Caching
  # -------------------------------
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: npm ci

      - name: Run Tests
        run: npm test -- --coverage

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  # -------------------------------
  # 2. Build & Push Docker Image to AWS ECR
  # -------------------------------
  build-and-push:
    runs-on: ubuntu-latest
    needs: test # only run if tests passed
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker image
        run: |
          IMAGE_REPO=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-node-app
          docker build -t my-node-app .
          docker tag my-node-app:latest $IMAGE_REPO:latest
          docker push $IMAGE_REPO:latest

  # -------------------------------
  # 3. Deploy on EC2 (Pull New Docker Image)
  # -------------------------------
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            IMAGE_REPO=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/my-node-app
            docker pull $IMAGE_REPO:latest
            docker stop my-node-app || true
            docker rm my-node-app || true
            docker run -d --name my-node-app -p 3000:3000 $IMAGE_REPO:latest
